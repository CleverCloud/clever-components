const t=/^[a-zA-Z_][a-zA-Z0-9_]*$/,e=/^[a-zA-Z0-9-_.]+$/;function n(n,r=""){return"strict"!==r?e.test(n):t.test(n)}const r={INVALID_NAME:0,DUPLICATED_NAME:1,INVALID_LINE:2,INVALID_VALUE:3,INVALID_JSON:4,INVALID_JSON_FORMAT:5,INVALID_JSON_ENTRY:6,INVALID_NAME_STRICT:7,JAVA_INFO:8},s="\n",a="'",o="\\",c=/([\\]*)'/g,i='"',u=/([\\]*)"/g;function p(t,e,n=0){let r=n,s=!1;for(;r<t.length;){if(t[r]===e&&!s)return r;s="\\"===t[r],r+=1}return r}function m(t){return""===t.trim()}function l(t){return t.trim().startsWith("#")}function A(t,e){const n=t.substring(0,e).split(s);return{line:n.length,column:n.slice(-1)[0].length}}function I(t="",e={}){const I=[],N=[],h=new Set,{mode:f=""}=e;let _=0;for(;_<t.length;){const e=p(t,s,_),L=t.substring(_,e);if(m(L)||l(L)){_=e+1;continue}if(!L.includes("=")){N.push({type:r.INVALID_LINE,pos:A(t,_)}),_=e+1;continue}const D=p(t,"=",_),g=t.substring(_,D),V=!n(g,"simple"),S=!n(g,"strict");S&&"strict"===f?N.push({type:r.INVALID_NAME_STRICT,name:g,pos:A(t,_)}):S&&V&&"strict"!==f?N.push({type:r.INVALID_NAME,name:g,pos:A(t,_)}):S&&!V&&"strict"!==f&&N.push({type:r.JAVA_INFO,name:g,pos:A(t,_)});const d=h.has(g);d?N.push({type:r.DUPLICATED_NAME,name:g,pos:A(t,_)}):h.add(g);const v=t[D+1];if(v===a||v===i){const n=p(t,v,D+2),s=t.substring(D+2,n),m=(y=s,(E=v)===a?y.replace(c,((t,e)=>o.repeat((e.length-1)/2)+a)):E===i?y.replace(u,((t,e)=>o.repeat((e.length-1)/2)+i)):y),l=e>n+1||n+1>t.length;(S||d||l||"strict"!==f)&&(V||!S||d||l||"strict"===f)&&(V||S||d||l||"strict"===f)||I.push({name:g,value:m}),l?(N.push({type:r.INVALID_VALUE,name:g,pos:A(t,n+1)}),_=e+1):_=n+1}else{const n=t.substring(D+1,e);(S||d||"strict"!==f)&&(V||!S||d||"strict"===f)&&(V||S||d||"strict"===f)||I.push({name:g,value:n}),_=e+1}}var E,y;return I.sort(((t,e)=>t.name.localeCompare(e.name))),{variables:I,errors:N}}function N(t="",e={}){let s;const a=[],{mode:o=""}=e;try{s=JSON.parse(t)}catch(t){return a.push({type:r.INVALID_JSON}),{variables:[],errors:a}}if(!Array.isArray(s)||s.some((t=>"object"!=typeof t)))return a.push({type:r.INVALID_JSON_FORMAT}),{variables:[],errors:a};const c=s.filter((({name:t,value:e})=>"string"==typeof t&&"string"==typeof e));c.length<s.length&&a.push({type:r.INVALID_JSON_ENTRY});const i=[],u=[],p=new Set,m=new Set,l=new Set;return c.forEach((t=>{const e=u.includes(t.name),r=!n(t.name,"simple"),s=!n(t.name,"strict");e&&p.add(t.name),(s&&"strict"===o||r&&s&&"strict"!==o)&&m.add(t.name),(e||s||"strict"!==o)&&(r||s||e||"strict"===o)?r||!s||e||"strict"===o||(u.push(t.name),i.push(t),l.add(t.name)):(u.push(t.name),i.push(t))})),Array.from(p).forEach((t=>{a.push({type:r.DUPLICATED_NAME,name:t})})),Array.from(m).forEach((t=>{"strict"!==o?a.push({type:r.INVALID_NAME,name:t}):a.push({type:r.INVALID_NAME_STRICT,name:t})})),Array.from(l).forEach((t=>a.push({type:r.JAVA_INFO,name:t}))),i.sort(((t,e)=>t.name.localeCompare(e.name))),{variables:i,errors:a}}function h(t){if(0===t.length)return"[]";const e=t.sort(((t,e)=>t.name.localeCompare(e.name))).map((({name:t,value:e})=>({name:t,value:e})));return JSON.stringify(e,null,2)}function f(t,e={}){const{addExports:n=!1}=e;return t.sort(((t,e)=>t.name.localeCompare(e.name))).map((({name:t,value:e})=>{const r=`${t}=${function(t){const e=t.replace(u,((t,e)=>o.repeat(2*e.length+1)+i));return i+e+i}(e)}`;return n?`export ${r};`:r})).join("\n")}function _(t){const e={};return t.filter((({name:t})=>n(t))).forEach((({name:t,value:n})=>{e[t]=n})),e}export{r as E,N as a,h as b,_ as c,I as p,f as t,n as v};
