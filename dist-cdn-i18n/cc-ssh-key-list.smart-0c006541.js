import{s as e}from"./i18n-sanitize-4edc4a2d.js";import"./cc-smart-container-f668ab58.js";import{b as t}from"./organisation-44bfc0df.js";import{d as a,e as n,f as s}from"./user-5f7b2ed4.js";import{d as i,O as o}from"./request.fetch-17efde15.js";import{b as r,a as c}from"./notifications-1d2a2395.js";import{s as l}from"./send-to-api-3f46dae0.js";import"./cc-ssh-key-list-06f70d87.js";async function p({apiConfig:e,key:t}){const n=encodeURIComponent(t.name),s=t.key;return a({key:n},JSON.stringify(s)).then(l({apiConfig:e}))}i({selector:"cc-ssh-key-list",params:{apiConfig:{type:Object}},onContextUpdate({component:a,context:i,onEvent:y,updateComponent:u,signal:g}){const{apiConfig:d}=i;function f(){return async function({apiConfig:e,signal:a,cacheDelay:n}){const[i,r]=await Promise.all([t({}).then(l({apiConfig:e,signal:a,cacheDelay:o})),s().then(l({apiConfig:e,signal:a,cacheDelay:n}))]),c=i.oauthApps.includes("github");let p;c&&(p=await Promise.resolve({method:"get",url:"/v2/github/keys",headers:{Accept:"application/json"}}).then(l({apiConfig:e,signal:a,cacheDelay:n})));return{isGithubLinked:c,personalKeys:r,githubKeys:p}}({apiConfig:d,signal:g,cacheDelay:0}).then((({isGithubLinked:e,personalKeys:t,githubKeys:a})=>{u("keyData",{state:"loaded",isGithubLinked:e,personalKeys:t.map((e=>({...e,state:"idle"}))),githubKeys:a?.map((e=>({...e,state:"idle"})))})})).catch((e=>{console.error(e),u("keyData",{state:"error"})}))}y("cc-ssh-key-list:create",(({name:t,publicKey:n})=>{a.createKeyFormState={type:"creating"},p({apiConfig:d,key:{name:t.trim(),key:n.trim()}}).then((()=>{f().then((()=>{r((({name:t})=>e`Votre clé <strong>${t}</strong> a été ajoutée avec succès.`)({name:t})),a.resetCreateKeyForm()}))})).catch((e=>{console.error(e),c(e,(({name:e})=>`Une erreur est survenue pendant l'ajout de votre nouvelle clé personnelle "${e}".`)({name:t}))})).finally((()=>{a.createKeyFormState={type:"idle"}}))})),y("cc-ssh-key-list:delete",(({name:t})=>{u("keyData",(e=>{e.personalKeys.find((e=>e.name===t)).state="deleting"})),async function({apiConfig:e,key:t}){const a=encodeURIComponent(t.name);return n({key:a}).then(l({apiConfig:e}))}({apiConfig:d,key:{name:t}}).then((()=>{f().then((()=>r((({name:t})=>e`Votre clé <strong>${t}</strong> a été supprimée avec succès.`)({name:t}))))})).catch((e=>{console.error(e),c(e,(({name:e})=>`Une erreur est survenue pendant la suppression de votre clé personnelle "${e}".`)({name:t})),u("keyData",(e=>{e.personalKeys.find((e=>e.name===t)).state="idle"}))}))})),y("cc-ssh-key-list:import",(({name:t,key:a,fingerprint:n})=>{u("keyData",(e=>{e.githubKeys.find((e=>e.name===t)).state="importing"})),m({apiConfig:d,key:{name:t,key:a}}).then((()=>{r((({name:t})=>e`Votre clé <strong>${t}</strong> a été importée avec succès.`)({name:t})),u("keyData",(e=>{e.personalKeys.push({state:"idle",name:t,fingerprint:n}),e.githubKeys=e.githubKeys.filter((e=>e.name!==t))}))})).catch((e=>{console.error(e),c(e,(({name:e})=>`Une erreur est survenue pendant l'import de votre clé personnelle "${e}".`)({name:t})),u("keyData",(e=>{e.githubKeys.find((e=>e.name===t)).state="idle"}))}))})),u("keyData",{state:"loading"}),a.createKeyFormState={type:"idle"},a.resetCreateKeyForm(),f()}});const m=p;
