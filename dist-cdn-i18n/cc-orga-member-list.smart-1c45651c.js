import{s as e}from"./i18n-sanitize-4edc4a2d.js";import"./cc-smart-container-f668ab58.js";import{g as r,a as t,r as i,u as n}from"./organisation-44bfc0df.js";import{g as a}from"./user-5f7b2ed4.js";import{d as o}from"./request.fetch-17efde15.js";import{b as s,a as m}from"./notifications-1d2a2395.js";import{s as d}from"./send-to-api-3f46dae0.js";import{CcOrgaMemberList as l}from"./cc-orga-member-list-527d8f5b.js";const u=()=>e`<p>Le membre a probablement quitté l'organisation ou a été supprimé par quelqu'un d'autre pendant que vous consultiez la liste.<p><p>Veuillez <strong>rafraîchir votre page</strong> pour récupérer la liste des membres à jour.</p>`;function p({apiConfig:e,ownerId:r,id:t}){return i({id:r,userId:t}).then(d({apiConfig:e}))}function g({apiConfig:e,ownerId:r,id:t,newRole:i}){return n({id:r,userId:t},{role:i}).then(d({apiConfig:e}))}o({selector:"cc-orga-member-list",params:{apiConfig:{type:Object},ownerId:{type:String}},onContextUpdate({component:i,context:n,onEvent:o,updateComponent:c,signal:b}){const{apiConfig:f,ownerId:v}=n;function I(e){const r="ADMIN"===e||"MANAGER"===e;c("authorisations",{invite:r,edit:r,delete:r})}function h(e,r){c("members",(t=>{const i=t.value.find((r=>r.id===e));null!=i&&r(i)}))}o("cc-orga-member-list:invite",(({email:r,role:n})=>{i.inviteMemberFormState={type:"inviting"},function({apiConfig:e,ownerId:r,email:i,role:n}){return t({id:r},{email:i,role:n,job:null}).then(d({apiConfig:e}))}({apiConfig:f,ownerId:v,email:r.trim(),role:n}).then((()=>{s((({userEmail:r})=>e`Un e-mail a été envoyé à <strong>${r}</strong> pour l'inviter dans l'organisation.`)({userEmail:r})),i.resetInviteMemberForm()})).catch((t=>{console.error(t),6451===t.id?m("Seul un admin peut inviter, éditer ou supprimer un autre admin.","Vous n'avez pas les droits nécessaires"):"You have performed that request too much."===t.message?m("Attendez quelques minutes avant d'essayer à nouveau.","Vous avez tenté d'inviter des membres trop de fois"):m((({userEmail:r})=>e`Une erreur est survenue lors de l'invitation de <strong>${r}</strong> dans l'organisation.`)({userEmail:r}))})).finally((()=>{i.inviteMemberFormState={type:"idle"}}))})),o("cc-orga-member-list:update",(({id:r,role:t,newRole:n,name:a,email:o,isCurrentUser:d})=>{"loaded"===i.members.state&&(!function(e,r){return"ADMIN"===e&&"MANAGER"===r.find((e=>e.isCurrentUser)).role}(t,i.members.value)?(h(r,(e=>{e.state="updating"})),g({apiConfig:f,ownerId:v,id:r,newRole:n}).then((()=>{s((({memberIdentity:r})=>e`Le rôle de <strong>${r}</strong> a bien été modifié.`)({memberIdentity:a??o})),h(r,(e=>{e.state="loaded",e.role=n})),d&&I(n)})).catch((t=>{console.error(t),6451===t.id||6452===t.id?m("Seul un admin peut inviter, éditer ou supprimer un autre admin.","Vous n'avez pas les droits nécessaires"):6501===t.id?m(u(),"Membre introuvable"):m((({memberIdentity:r})=>e`Une erreur est survenue lors de la modification de <strong>${r}</strong>.`)({memberIdentity:a??o})),h(r,(e=>{e.state="editing"}))}))):m("Seul un admin peut inviter, éditer ou supprimer un autre admin.","Vous n'avez pas les droits nécessaires"))})),o("cc-orga-member-card:delete",(({id:r,name:t,email:i})=>{h(r,(e=>{e.state="deleting"})),p({apiConfig:f,ownerId:v,id:r}).then((()=>{s((({memberIdentity:r})=>e`<strong>${r}</strong> a été supprimé de l'organisation.`)({memberIdentity:t??i})),c("members",(e=>{e.value=e.value.filter((e=>e.id!==r))}))})).catch((n=>{console.error(n),6452===n.id?m("Seul un admin peut inviter, éditer ou supprimer un autre admin.","Vous n'avez pas les droits nécessaires"):6501===n.id?m(u(),"Membre introuvable"):m((({memberIdentity:r})=>e`Une erreur est survenue lors la suppression de <strong>${r}</strong>.`)({memberIdentity:t??i})),h(r,(e=>{e.state="loaded"}))}))})),o("cc-orga-member-list:leave",(({id:e})=>{h(e,(e=>{e.state="deleting"})),c("members",(e=>{e.dangerZoneState="leaving"})),p({apiConfig:f,ownerId:v,id:e}).then((()=>{s("Vous avez quitté l'organisation."),I(),c("members",{state:"error"}),window.dispatchEvent(new Event("orga-member-leave-success"))})).catch((r=>{console.error(r),m("Une erreur est survenue lorsque vous avez tenté de quitter l'organisation."),h(e,(e=>{e.state="loaded"})),c("members",(e=>{e.dangerZoneState="idle"}))}))})),c("authorisations",l.INIT_AUTHORISATIONS),i.resetInviteMemberForm(),i.inviteMemberFormState={type:"idle"},c("members",{state:"loading"}),function({apiConfig:e,ownerId:t,signal:i}){return Promise.all([a().then(d({apiConfig:e,signal:i})),r({id:t}).then(d({apiConfig:e,signal:i}))]).then((([{ownerId:e},r])=>r.map((({member:r,role:t,job:i})=>({id:r.id,avatar:r.avatar,name:r.name,jobTitle:i,role:t,email:r.email,isMfaEnabled:"TOTP"===r.preferredMFA,isCurrentUser:r.id===e})))))}({apiConfig:f,ownerId:v,signal:b}).then((e=>{I(e.find((e=>e.isCurrentUser)).role),c("members",{state:"loaded",value:e.map((e=>({state:"loaded",...e}))),identityFilter:"",mfaDisabledOnlyFilter:!1})})).catch((e=>{console.error(e),c("members",{state:"error"})}))}});
