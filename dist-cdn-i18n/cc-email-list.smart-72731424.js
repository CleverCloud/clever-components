import{s as e}from"./i18n-sanitize-4edc4a2d.js";import{t as s,a,b as r,c as i}from"./user-5f7b2ed4.js";import{d}from"./request.fetch-17efde15.js";import{n as t,a as n,b as o}from"./notifications-1d2a2395.js";import{s as l}from"./send-to-api-3f46dae0.js";import"./cc-smart-container-f668ab58.js";import"./cc-email-list-2aeb48c4.js";const m=({address:s})=>e`Pour terminer le processus vous devez confirmer votre inscription en cliquant sur le lien qui vous a été envoyé par e-mail à l'adresse <strong>${s}</strong>.`,c=({address:s})=>e`Pour terminer le processus vous devez confirmer votre inscription en cliquant sur le lien qui vous a été envoyé par e-mail à l'adresse <strong>${s}</strong>.`;d({selector:"cc-email-list",params:{apiConfig:{type:Object}},onContextUpdate({component:d,context:u,onEvent:p,updateComponent:f,signal:g}){f("emails",{state:"loading"}),f("addEmailFormState",{state:"idle"}),d.resetAddEmailForm();const y=function(e,d){return{fetchEmailAddresses(){return Promise.all([this.fetchPrimaryEmailAddress(),this.fetchSecondaryEmailAddresses()]).then((([e,s])=>({self:e,secondary:s})))},fetchPrimaryEmailAddress:()=>Promise.resolve({method:"get",url:"/v2/self",headers:{Accept:"application/json"}}).then(l({apiConfig:e,signal:d})),fetchSecondaryEmailAddresses:()=>s().then(l({apiConfig:e,signal:d})),sendConfirmationEmail:()=>a().then(l({apiConfig:e})),addSecondaryEmailAddress:s=>r({email:s},{}).then(l({apiConfig:e})),deleteSecondaryEmailAddress:s=>i({email:s}).then(l({apiConfig:e})),markSecondaryEmailAddressAsPrimary:s=>r({email:s},{make_primary:!0}).then(l({apiConfig:e}))}}(u.apiConfig,g);function v(e,s){f("emails",(a=>{const r=a.value.secondaryAddresses.find((s=>s.address===e));null!=r&&s(r)}))}y.fetchEmailAddresses().then((({self:e,secondary:s})=>{f("emails",{state:"loaded",value:{primaryAddress:{state:"idle",address:e.email,verified:e.emailValidated},secondaryAddresses:s.map((e=>({state:"idle",address:e,verified:!0})))}})})).catch((e=>{console.error(e),f("emails",{state:"error"})})),p("cc-email-list:send-confirmation-email",(s=>{f("emails",(e=>{e.value.primaryAddress.state="sending-confirmation-email"})),y.sendConfirmationEmail().then((()=>{t({intent:"info",title:"Un e-mail de confirmation a été envoyé.",message:m({address:s}),options:{timeout:0,closeable:!0}})})).catch((a=>{console.error(a),n((({address:s})=>e`Une erreur est survenue pendant l'envoi de l'e-mail de confirmation à l'adresse <strong>${s}</strong>.`)({address:s}))})).finally((()=>{f("emails",(e=>{e.value.primaryAddress.state="idle"}))}))})),p("cc-email-list:add",(s=>{f("addEmailFormState",(e=>{e.type="adding"})),y.addSecondaryEmailAddress(s).then((()=>{t({intent:"info",title:"L'ajout d'adresse e-mail secondaire a été pris en compte",message:c({address:s}),options:{timeout:0,closeable:!0}}),d.resetAddEmailForm()})).catch((a=>{const r=function(e){if(550===e)return"invalid";if(101===e)return"already-defined";if(1004===e)return"used";return null}(a.id);null==r?(console.error(a),n((({address:s})=>e`Une erreur est survenue lors de l'ajout de l'adresse e-mail secondaire <strong>${s}</strong>.`)({address:s}))):f("addEmailFormState",(e=>{e.errors={email:r}}))})).finally((()=>{f("addEmailFormState",(e=>{e.type="idle"}))}))})),p("cc-email-list:delete",(s=>{v(s,(e=>{e.state="deleting"})),y.deleteSecondaryEmailAddress(s).then((()=>{o((({address:s})=>e`L'adresse e-mail secondaire <strong>${s}</strong> a été supprimée avec succès.`)({address:s})),f("emails",(e=>{e.value.secondaryAddresses=e.value.secondaryAddresses.filter((e=>e.address!==s))}))})).catch((a=>{console.error(a),n((({address:s})=>e`Une erreur est survenue lors de la suppression de l'adresse e-mail secondaire <strong>${s}</strong>.`)({address:s})),v(s,(e=>{e.state="idle"}))}))})),p("cc-email-list:mark-as-primary",(s=>{v(s,(e=>{e.state="marking-as-primary"})),y.markSecondaryEmailAddressAsPrimary(s).then((()=>{if(o((({address:s})=>e`L'adresse e-mail <strong>${s}</strong> a bien été définie comme primaire.`)({address:s})),"loaded"===d.emails.state){const e=d.emails.value.primaryAddress.address;f("emails",(e=>{e.value.primaryAddress.address=s})),v(s,(s=>{s.state="idle",s.address=e}))}})).catch((a=>{console.error(a),n((({address:s})=>e`Une erreur est survenue pendant le marquage en tant qu'adresse e-mail primaire <strong>${s}</strong>.`)({address:s})),v(s,(e=>{e.state="idle"}))}))}))}});
