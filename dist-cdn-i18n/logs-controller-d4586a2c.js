import{i as t}from"./utils-aa566623.js";const e=/\/(?<expression>.+)\/(?<flags>[a-z]*)/i;function s(t){if(t.startsWith("/")){const s=t.match(e);if(null==s)throw new Error("invalid regular expression format");const{expression:i,flags:l}=s.groups,n=Array.from(new Set(l)).filter((t=>"dgimsuy".includes(t))).join("");return new RegExp(i,n)}return new RegExp(t)}const i=()=>!0,l=()=>!1;class n{constructor(t){this._host=t,this._logs=[],this._logsFiltered=[],this._limit=1/0,this._filterCallback=i,this._selection=new Set,this._selectionLast=null,this._focusedIndex=null}set limit(t){const e="number"==typeof t&&!Number.isNaN(t);(e?t:1/0)!==this._limit&&(this._limit=e?t:1/0,this._updateList())}set filter(t){if(null==t)this._filterCallback=i;else{const e=this._getMessageFilterCallback(t.message),s=this._getMetadataFilterCallback(t.metadata);this._filterCallback=t=>e(t)&&s(t)}this._updateList({forceFilter:!0})}getList(){return this._logsFiltered}get listLength(){return this._logsFiltered.length}append(t){this._updateList({newLogs:t})}clear(){this._logs=[],this._logsFiltered=[],this._selection.clear(),this._updateList(),this.clearFocus()}select(t){const e=this._getLogByFilteredIndex(t);this._selection=null!=e?new Set([e]):new Set,this._selectionLast=e,this._host.requestUpdate(),this._host._onSelectionChanged()}toggleSelection(t){const e=this._getLogByFilteredIndex(t);null!=e&&(this._selection.has(e)?(this._selection.delete(e),this._selectionLast=Array.from(this._selection).pop()):(this._selection.add(e),this._selectionLast=this._logsFiltered[t]),this._host.requestUpdate(),this._host._onSelectionChanged())}extendSelection(t,e){if(0===this._selection.size)return void this.select(t);const s=this._selectionLast??Array.from(this._selection).pop(),i=this._logsFiltered.indexOf(s),l=t,n=Math.min(i,l),o=Math.max(i,l),h=this._logsFiltered.slice(Math.max(0,n),o+1);"replace"===e&&this._selection.clear(),h.forEach((t=>this._selection.add(t))),this._host.requestUpdate(),this._host._onSelectionChanged()}clearSelection(){this._selection.clear(),this._selectionLast=null,this._host.requestUpdate(),this._host._onSelectionChanged()}selectAll(){this._logsFiltered.length>0&&(this._selection=new Set(this._logsFiltered),this._selectionLast=this._logsFiltered[this._logsFiltered.length-1],this._host.requestUpdate(),this._host._onSelectionChanged())}get selectionLength(){return this._selection.size}isSelected(t){const e=this._getLogByFilteredIndex(t);return this._selection.has(e)}isSelectionEmpty(){return 0===this._selection.size}getSelectedLogs(){return this._logs.filter((t=>this._selection.has(t)))}focus(t,e=!0){null!=t&&(t<0||t>this._logsFiltered.length-1)||this._focusedIndex!==t&&(this._focusedIndex=t,e&&this._host._onFocusedLogChange(t))}moveFocus(t,e){null!=this._focusedIndex?("up"===t&&this._focusedIndex>0&&this.focus(this._focusedIndex-1),"down"===t&&this._focusedIndex<this._logsFiltered.length-1&&this.focus(this._focusedIndex+1)):null!=e&&("up"===t&&this.focus(e.last),"down"===t&&this.focus(e.first))}clearFocus(t=!0){this.focus(null,t)}isFocusedIndexInRange({first:t,last:e}){return null!=this._focusedIndex&&this._focusedIndex>=t&&this._focusedIndex<=e}_getLogByFilteredIndex(t){return this._logsFiltered[t]}_updateList(t={}){const e=t.newLogs??[],s=t.forceFilter??!1;let i=!1;const l=t=>{i=this._selection.delete(t)||i},n=e.length>this._limit?e.slice(e.length-this._limit):e.slice(),o=this._logs.length+n.length,h=o>=this._limit?o-this._limit:0,r=this._logs.splice(0,h);if(this._logs.push(...n),s)this._logsFiltered=[],this._logs.forEach((t=>{this._filterCallback(t)?this._logsFiltered.push(t):l(t)})),this.clearFocus();else{const t=r.filter(this._filterCallback);this._logsFiltered.splice(0,t.length);const e=n.filter(this._filterCallback);this._logsFiltered.push(...e),null!=this._focusedIndex&&t.length>0&&(this._focusedIndex>t.length?this.focus(this._focusedIndex-t.length):this.clearFocus())}r.forEach(l),this._selection.has(this._selectionLast)||(this._selectionLast=null),this._host.requestUpdate(),i&&this._host._onSelectionChanged()}_getMetadataFilterCallback(t){if(null==t||0===t.length)return i;const e={};if(Array.isArray(t))for(const s of t)null==e[s.metadata]&&(e[s.metadata]=[]),e[s.metadata].push(s.value);const s=Object.entries(e);return t=>s.every((([e,s])=>{const i=t.metadata.find((t=>t.name===e));return s.includes(i?.value)}))}_getMessageFilterCallback(e){if(null==e||t(e.value))return i;if("strict"===e.type)return t=>t.message.includes(e.value);if("regex"===e.type)try{const t=s(e.value);return e=>null!=e.message.match(t)}catch(t){return l}const n=e.value.trim().toLowerCase().split(" ").filter((t=>t.length>0));return t=>{const e=t.message.toLowerCase();return n.every((t=>e.includes(t)))}}}export{n as L,s as p};
