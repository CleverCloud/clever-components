import{s as e}from"./i18n-bf531c19.js";import"./cc-input-text-215605a4.js";import"./cc-error-8d730ec3.js";import{E as r,p as t,t as s}from"./env-vars-13fc89da.js";import{L as a,d as i,h as o,c as n}from"./vendor-5e139a4e.js";import{d as l}from"./default-theme-fead272a.js";const d=({name:r})=>e`be careful, the name <code>${r}</code> is already defined`,c=()=>e`this line is not valid, the correct pattern is: <code>NAME="VALUE"</code>`,p=({name:r})=>e`<code>${r}</code> is not a valid variable name`,m=()=>e`the value is not valid, if you use quotes, you need to escape them like this: <code>\\"</code> or quote the whole value.`,h=[{name:"VARIABLE_ONE",value:""},{name:"VARIABLE_FOOBAR",value:""},{name:"VARIABLE_PORT",value:""}];class u extends a{static get properties(){return{disabled:{type:Boolean},readonly:{type:Boolean},variables:{type:Array},_variablesAsText:{type:Array,attribute:!1},_errors:{type:Array,attribute:!1},_skeleton:{type:Boolean,attribute:!1}}}constructor(){super(),this._skeleton=!1,this.variables=null,this.disabled=!1,this.readonly=!1}_setErrors(e){this._errors=e.map((({type:e,name:t,pos:s})=>e===r.INVALID_NAME?{line:s.line,msg:p({name:t})}:e===r.DUPLICATED_NAME?{line:s.line,msg:d({name:t})}:e===r.INVALID_LINE?{line:s.line,msg:c}:e===r.INVALID_VALUE?{line:s.line,msg:m}:{line:"?",msg:"Unknown Error"}))}_onInput({detail:e}){const{variables:r,errors:s}=t(e);this._setErrors(s),0===s.length&&i(this,"change",r)}update(e){if(e.has("variables")){this._skeleton=null==this.variables;const e=(this._skeleton?h:this.variables).filter((({isDeleted:e})=>!e));this._variablesAsText=s(e),this._setErrors([])}super.update(e)}render(){const e=this.readonly?"There are no variables.":'VARIABLE_NAME="variable value"';return o`<cc-input-text multi clipboard value=${this._variablesAsText} placeholder=${e} ?disabled=${this.disabled} ?readonly=${this.readonly} ?skeleton=${this._skeleton} @cc-input-text:input=${this._onInput}></cc-input-text>${this._errors.length>0?o`<div class=error-list>${this._errors.map((({line:e,msg:r})=>o`<cc-error><strong>line ${e}:</strong> ${r}</cc-error>`))}</div>`:""}`}static get styles(){return[l,n`:host{display:block}:host([hidden]){display:none}.error-list{display:grid;grid-gap:.75rem;margin-top:1rem}cc-error code{background-color:#f3f3f3;border-radius:.25rem;font-family:var(--cc-ff-monospace);padding:.15rem .3rem}`]}}window.customElements.define("cc-env-var-editor-expert",u);export{u as CcEnvVarEditorExpert};
