const n=/^[a-zA-Z0-9-_.]+$/;function e(e){return n.test(e)}const t={INVALID_NAME:0,DUPLICATED_NAME:1,INVALID_LINE:2,INVALID_VALUE:3},r=/([\\]*)'/g,s=/([\\]*)"/g;function a(n,e,t=0){let r=t,s=!1;for(;r<n.length;){if(n[r]===e&&!s)return r;s="\\"===n[r],r+=1}return r}function o(n){return""===n.trim()}function u(n){return n.trim().startsWith("#")}function c(n,e){const t=n.substring(0,e).split("\n");return{line:t.length,column:t.slice(-1)[0].length}}function i(n=""){const i=[],l=[],p=new Set;let m=0;for(;m<n.length;){const I=a(n,"\n",m),g=n.substring(m,I);if(o(g)||u(g)){m=I+1;continue}if(!g.includes("=")){l.push({type:t.INVALID_LINE,pos:c(n,m)}),m=I+1;continue}const A=a(n,"=",m),E=n.substring(m,A);e(E)||l.push({type:t.INVALID_NAME,name:E,pos:c(n,m)}),p.has(E)?l.push({type:t.DUPLICATED_NAME,name:E,pos:c(n,m)}):p.add(E);const L=n[A+1];if("'"===L||'"'===L){const e=a(n,L,A+2),o=n.substring(A+2,e),u=(f=o,"'"===(h=L)?f.replace(r,((n,e)=>"\\".repeat((e.length-1)/2)+"'")):'"'===h?f.replace(s,((n,e)=>"\\".repeat((e.length-1)/2)+'"')):f);i.push({name:E,value:u}),I>e+1||e+1>n.length?(l.push({type:t.INVALID_VALUE,name:E,pos:c(n,e+1)}),m=I+1):m=e+1}else{const e=n.substring(A+1,I);i.push({name:E,value:e}),m=I+1}}var h,f;return i.sort(((n,e)=>n.name.localeCompare(e.name))),{variables:i,errors:l}}function l(n,e={}){const{addExports:t=!1}=e;return n.sort(((n,e)=>n.name.localeCompare(e.name))).map((({name:n,value:e})=>{const r=`${n}=${'"'+e.replace(s,((n,e)=>"\\".repeat(2*e.length+1)+'"'))+'"'}`;return t?`export ${r};`:r})).join("\n")}function p(n){const t={};return n.filter((({name:n})=>e(n))).forEach((({name:n,value:e})=>{t[n]=e})),t}export{t as E,p as a,i as p,l as t,e as v};
