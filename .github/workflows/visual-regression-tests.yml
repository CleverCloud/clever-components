name: Visual Changes Tests

concurrency:
  group: visual-changes-${{ inputs.pr_number || inputs.branch }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
      branch:
        required: true
        type: string
      pr_number:
        required: true
        type: string
      base_sha:
        required: true
        type: string

jobs:
  baseline-update:
    name: Baseline Update (sharded)
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
      options: --user 1001
    strategy:
      matrix:
        batch: ${{ fromJson(inputs.matrix) }}
    steps:
      - name: '[Prepare] Checkout base commit'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base_sha }}

      - name: '[Prepare] Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'npm'

      - name: '[Prepare] Install dependencies'
        run: npm ci

      - name: 'Run Visual Regression Tests (Baseline update) - batch ${{ matrix.batch }}'
        run: npm run test-visual-regressions:update-baseline -- --group batch-${{ matrix.batch }}
        env:
          VISUAL_REGRESSIONS_CELLAR_KEY_ID: ${{ secrets.VISUAL_REGRESSIONS_CELLAR_KEY_ID }}
          VISUAL_REGRESSIONS_CELLAR_SECRET_KEY: ${{ secrets.VISUAL_REGRESSIONS_CELLAR_SECRET_KEY }}
          GITHUB_HEAD_REF: ${{ inputs.branch }}

      - name: 'Set LAST_BASELINE_UPDATE output'
        id: set_last_baseline_update
        run: echo "last_baseline_update=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    outputs:
      last_baseline_update: ${{ steps.set_last_baseline_update.outputs.last_baseline_update }}

  run-visual-regression-tests:
    name: Run Visual Regression Tests (Current changes)
    needs: [baseline-update]
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
      options: --user 1001
    strategy:
      matrix:
        batch: ${{ fromJson(inputs.matrix) }}
    steps:
      - name: '[Prepare] Checkout latest commit'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: '[Prepare] Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      - run: npm ci

      - name: Run Visual Regression Tests (Current changes) - batch ${{ matrix.batch }}'
        run: npm run test-visual-regressions -- --group batch-${{ matrix.batch }}
        env:
          VISUAL_REGRESSIONS_CELLAR_KEY_ID: ${{ secrets.VISUAL_REGRESSIONS_CELLAR_KEY_ID }}
          VISUAL_REGRESSIONS_CELLAR_SECRET_KEY: ${{ secrets.VISUAL_REGRESSIONS_CELLAR_SECRET_KEY }}
          GITHUB_HEAD_REF: ${{ inputs.branch }}
        continue-on-error: true

      - name: Upload report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-results-${{ matrix.batch }}.json
          path: test-reports/visual-regression-results.json
          retention-days: 1

  generate-final-report:
    name: Generate final report
    needs: [baseline-update, run-visual-regression-tests]
    runs-on: ubuntu-latest
    steps:
      - name: '[Prepare] Checkout latest commit'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: '[Prepare] Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      - run: npm ci

      - name: Download reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-reports
          pattern: visual-regression-results-*

      - name: Generate single HTML report
        run: node ./tasks/generate-visual-regression-html-report.js

      - name: 'Upload test report'
        id: 'upload-test-report'
        run: npm run upload-test-report
        env:
          VISUAL_REGRESSIONS_CELLAR_KEY_ID: ${{ secrets.VISUAL_REGRESSIONS_CELLAR_KEY_ID }}
          VISUAL_REGRESSIONS_CELLAR_SECRET_KEY: ${{ secrets.VISUAL_REGRESSIONS_CELLAR_SECRET_KEY }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          BASE_SHA: ${{ inputs.base_sha }}
          LAST_BASELINE_UPDATE: ${{ needs.baseline-update.outputs.last_baseline_update }}
          WORKFLOW_ID: ${{ github.run_id }}
          PR_NUMBER: ${{ inputs.pr_number }}

      - name: '[Prepare] Retrieve and format impacted components list'
        id: get-impacted-components-list
        run: |
          impacted_components=$(jq -r '.impactedComponents[] | "- \(. )"' test-reports/visual-regression-results-merged.json | paste -sd '\n' -)
          echo "impacted_components<<EOF" >> $GITHUB_OUTPUT
          echo "$impacted_components" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo nb_of_impacted_components=$(jq '.impactedComponents | length' test-reports/visual-regression-results-merged.json) >> $GITHUB_OUTPUT

      - name: '[Prepare] Get report update date'
        id: get-report-update-date
        run: echo "report_update_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: 'Create or edit PR comment'
        run: node .github/scripts/create-or-edit-comment.js
        env:
          PR_NUMBER: ${{ inputs.pr_number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MARKER: 'Visual Changes Report'
          MESSAGE: |
            ## :monocle_face: Visual Changes Report for PR #${{ inputs.pr_number }}

            The latest visual regression test report is available. Please review the results.

            - [View HTML Report](${{ steps.upload-test-report.outputs.report_url }})
            - Baseline info:
              - Commit: ${{ inputs.base_sha }}
              - Last update: ${{ needs.baseline-update.outputs.last_baseline_update }}
            - Changes info:
              - Commit: ${{ github.sha }}
              - Last update: ${{ steps.get-report-update-date.outputs.report_update_date }}
            - Workflow run: [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            <details>
              <summary>${{ steps.get-impacted-components-list.outputs.nb_of_impacted_components }} components impacted</summary>

            ${{ steps.get-impacted-components-list.outputs.impacted_components }}

            </details>

            _This comment was generated automatically by the Visual Changes workflow._
